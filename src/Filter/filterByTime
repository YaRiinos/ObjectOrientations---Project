package ObjectOrientationsPackage;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Date;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

public class filterByTime {
	String fileLoc;

	public filterByTime() {
		fileLoc = "C:\temp2";
	}

	public filterByTime(String fileLoc) {
		this.fileLoc = fileLoc;
	}

	public void setTime(Time start, Time end) throws FileNotFoundException, IOException {
		// Delimiter used in CSV file
		String line = "";
		String cvsSplitBy = ",";
		try (BufferedReader br = new BufferedReader(new FileReader(fileLoc))) {
			br.readLine(); // this will read the first line

			while ((line = br.readLine()) != null) {
				String[] column = line.split(cvsSplitBy);
				DateFormat formatter = new SimpleDateFormat("HH:mm");
				java.sql.Time timeValue = new java.sql.Time(formatter.parse(column[0]).getTime());
				if (!(start.before(timeValue) && !(end.after(timeValue)))) {
					System.out.println(column.toString());
				}
			}

		} catch (ParseException e) {
			e.printStackTrace();
		}
	}

	public void setTimeComplement(Time start, Time end){
		// Delimiter used in CSV file
		String line = "";
		String cvsSplitBy = ",";
		try (BufferedReader br = new BufferedReader(new FileReader(fileLoc))) {
			br.readLine(); // this will read the first line

			while ((line = br.readLine()) != null) {
				String[] column = line.split(cvsSplitBy);
				DateFormat formatter = new SimpleDateFormat("HH:mm");
				java.sql.Time timeValue = new java.sql.Time(formatter.parse(column[0]).getTime());
				if (start.before(timeValue) && end.after(timeValue)) {
					System.out.println(column.toString());
				}
			}

		} catch (ParseException e) {
			e.printStackTrace();
		}
}
}
